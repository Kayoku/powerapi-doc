{"remainingRequest":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/vue-loader/lib/index.js??ref--1-1!/home/ubuntu-jordan/git/powerapidocstest/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/ubuntu-jordan/git/powerapidocstest/docs/howto/measure_socket.md?vue&type=template&id=a7e3337e&","dependencies":[{"path":"/home/ubuntu-jordan/git/powerapidocstest/docs/howto/measure_socket.md","mtime":1559743630270},{"path":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/cache-loader/dist/cjs.js","mtime":1559810001878},{"path":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1559739068304},{"path":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/cache-loader/dist/cjs.js","mtime":1559810001878},{"path":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/vue-loader/lib/index.js","mtime":1559739068304},{"path":"/home/ubuntu-jordan/git/powerapidocstest/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1559810004709}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"how-to-monitor-power-consumption-of-a-socket\"><a class=\"header-anchor\" href=\"#how-to-monitor-power-consumption-of-a-socket\" aria-hidden=\"true\">#</a> How to monitor power consumption of a socket</h1>\n<h2 id=\"introduction\"><a class=\"header-anchor\" href=\"#introduction\" aria-hidden=\"true\">#</a> Introduction</h2>\n<p>This tutorial presents how to assemble a formula (RAPL-formula) and a sensor\n(HWPC-sensor) to build a power meter that monitor the power consumption of each\nCPU socket.</p>\n<p>First of all, we describe the power meter that we want to build. Then, we\ndescribe how to deploy the power meter's component and how to connect\nthem. Each component could be deployed with docker or directly by installing it\non the system.</p>\n<h2 id=\"compatible-architecture\"><a class=\"header-anchor\" href=\"#compatible-architecture\" aria-hidden=\"true\">#</a> Compatible Architecture</h2>\n<p>The power meter will use hardware counters that exist only on Intel CPU with\nSandy Bridge architecture or higher. The power meter can't be used without\ntheses counters.</p>\n<h2 id=\"power-meter-description\"><a class=\"header-anchor\" href=\"#power-meter-description\" aria-hidden=\"true\">#</a> Power meter description</h2>\n<p>Power meter estimations are based on the Running Average Power Limit (RAPL)\ntechnology. RAPL provide a set of hardware counters that report data about the\ncurrent energy consumption of each CPU socket. The power meter use the\nHWPC-sensor to collect these data and send them to the RAPL-formula to compute\nthe current energy consumption of monitored sockets.</p>\n<p>Each component of the power meter could be hosted on a different machine. In\nthis tutorial, we assume that each component are hosted on the same machine.</p>\n<h2 id=\"data-and-database\"><a class=\"header-anchor\" href=\"#data-and-database\" aria-hidden=\"true\">#</a> Data and database</h2>\n<p>As explained <router-link to=\"./powerapi_howitworks.html#power-meter-architecture\">here</router-link> The power\nmeter need two mongoDB databases to connect the formula to the sensor and to\nstore the power consumption information computed by the formula.</p>\n<p>We assume that this two databases are hosted on the same mongoDB instance but\ndifferent instances could be used for each database. In the rest of its\ntutorial, the URI of the mongoDB instance will be <code>mongo://ADDR</code></p>\n<p>The first database (that connect the formula and the sensor) will be called\n<code>connection_db</code> and the data will be store on the <code>hwrep</code> collection.</p>\n<p>The second database (that store power consumption computed by the formula) will\nbe called <code>output_db</code> and data will be stored on the <code>power_consumption</code>\ncollection.</p>\n<h2 id=\"get-power-meter-result\"><a class=\"header-anchor\" href=\"#get-power-meter-result\" aria-hidden=\"true\">#</a> Get power meter result</h2>\n<p>To access to the power consumption information computed by the power meter just\nconnect a mongo client to the mongoDB instance and retrieve the data of the\n<code>power_consumption</code> collection of the <code>output_db</code> database.</p>\n<p>Power information data are structured as this json format :</p>\n<pre><code>{\n    &quot;_id&quot; : XXX # MongoDB object identifier (string)\n    &quot;timestamp&quot; : YYY # timestamp of the power measure (iso date)\n    &quot;metadata&quot; : {\n            &quot;socket&quot; : &quot;N&quot;, # socket identifier (int)\n    },\n    &quot;power&quot; : Z.ZZZ # power consumption expressed in watts (float)\n}\n</code></pre>\n<p>For example to display a power consumption report with the mongo client :</p>\n<pre><code>mongo ADDR\nuse output_db\ndb.power_consumption.findOne()\n</code></pre>\n<h2 id=\"deployment-with-docker\"><a class=\"header-anchor\" href=\"#deployment-with-docker\" aria-hidden=\"true\">#</a> Deployment with docker</h2>\n<p>This section present how to deploy and connect each component of the power\nmeter with docker. You will see how to :</p>\n<ul>\n<li>deploy a mongoDB instance in a docker container</li>\n<li>deploy the HWPC-sensor in a docker container and connect it to the mongoDB instance</li>\n<li>deploy the RAPL-formula in a docker container and connect it to the mongoDB instance</li>\n</ul>\n<h3 id=\"setup-docker-environment\"><a class=\"header-anchor\" href=\"#setup-docker-environment\" aria-hidden=\"true\">#</a> Setup docker environment</h3>\n<p>Download components image :</p>\n<pre><code>docker pull powerapi/hwpc-sensor\ndocker pull powerapi/rapl-formula\ndocker pull mongo\n</code></pre>\n<p>Setup a docker network that will be used to connect each containers</p>\n<pre><code>docker network create powerapi\n</code></pre>\n<h3 id=\"launch-the-different-component\"><a class=\"header-anchor\" href=\"#launch-the-different-component\" aria-hidden=\"true\">#</a> Launch the different component</h3>\n<p>Launch the mongoDB instance :</p>\n<pre><code>docker run -td --name powerapi-mongo --net=powerapi -p 27017:27017 mongo\n</code></pre>\n<p>Launch the sensor :</p>\n<pre><code>docker run --net=powerapi --privileged --name powerapi-sensor -td -v /sys:/sys -v /var/lib/docker/containers:/var/lib/docker/containers:ro -v /tmp/powerapi-sensor-reporting:/reporting powerapi/hwpc-sensor -n &quot;test-sensor&quot; -r &quot;mongodb&quot; -U &quot;mongodb://powerapi-mongo&quot; -D &quot;connection_db&quot; -C &quot;hwrep&quot; -s &quot;rapl&quot; -o -e &quot;RAPL_ENERGY_CORES&quot; -e &quot;RAPL_ENERGY_PKG&quot; -e &quot;RAPL_ENERGY_GPU&quot;\n</code></pre>\n<p>Launch the formula :</p>\n<pre><code>docker run -td --net=powerapi --name powerapi-formula powerapi/rapl-formula mongodb://powerapi-mongo connection_db hwrep mongodb://powerapi-mongo output_db power_consumption -s\n</code></pre>\n<h2 id=\"deployment-without-docker\"><a class=\"header-anchor\" href=\"#deployment-without-docker\" aria-hidden=\"true\">#</a> Deployment without docker</h2>\n<p>This section present how to deploy and connect each component of the power\nmeter without docker, by installing each of them on the monitored machine. You\nwill see how to :</p>\n<ul>\n<li>compile the HWPC-sensor and connect it to an existing mongoDB instance</li>\n<li>install the RAPL-formula and connect it to an existing mongoDB instance</li>\n<li>launch the sensor and the formula from the command line</li>\n</ul>\n<h3 id=\"prerequisites\"><a class=\"header-anchor\" href=\"#prerequisites\" aria-hidden=\"true\">#</a> Prerequisites</h3>\n<ul>\n<li>python 3.7</li>\n<li>pip</li>\n<li>a mongoDB instance runing and accessible from the address <code>mongodb://ADDR</code></li>\n<li>root privilege to launch the sensor</li>\n</ul>\n<h3 id=\"component-installation\"><a class=\"header-anchor\" href=\"#component-installation\" aria-hidden=\"true\">#</a> Component installation</h3>\n<p>install the sensor from sources</p>\n<pre><code>git clone https://github.com/powerapi-ng/hwpc-sensor.git\ncd hwpc-sensor\ncmake .\nmake\n</code></pre>\n<p>install the RAPL-formula</p>\n<pre><code>pip3 install rapl-formula\n</code></pre>\n<h3 id=\"launch-the-different-component-2\"><a class=\"header-anchor\" href=\"#launch-the-different-component-2\" aria-hidden=\"true\">#</a> Launch the different component</h3>\n<p>On the HWPC-sensor repository launch the sensor :</p>\n<pre><code>sudo ./hwpc-sensor -n &quot;sensor&quot; -r &quot;mongodb&quot; -U &quot;mongodb://ADDR&quot; -D &quot;connection_db&quot; -C &quot;hwrep&quot; -s &quot;rapl&quot; -o -e &quot;RAPL_ENERGY_CORES&quot; -e &quot;RAPL_ENERGY_PKG&quot; -e &quot;RAPL_ENERGY_GPU&quot; &amp;\n</code></pre>\n<p>launch the formula</p>\n<pre><code>python3 -m rapl_formula mongodb://ADDR connection_db hwrep mongodb://ADDR output_db power_consumption -s &amp;\n</code></pre>\n</div>\n",null]}