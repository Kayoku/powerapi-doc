(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{189:function(e,t,o){"use strict";o.r(t);var a=o(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"powerapi-how-it-works"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#powerapi-how-it-works","aria-hidden":"true"}},[e._v("#")]),e._v(" PowerAPI - How it works ?")]),e._v(" "),o("h2",{attrs:{id:"power-meter-architecture"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#power-meter-architecture","aria-hidden":"true"}},[e._v("#")]),e._v(" Power meter Architecture")]),e._v(" "),o("p",[e._v("A power meter is a set of two components, a sensor and a formula, used to\nproduce an estimation of the power consumption of a monitored software.")]),e._v(" "),o("p",[e._v("The sensor collects raw data correlated with the power consumption of the\nsoftware. The formula is a model that use the collected data to compute the\npower consumption. Both of them are connected by a database that is used to\ntransfer data from the sensor to the formula.")]),e._v(" "),o("p",[e._v("The two next sub-sections present how a sensor and a formula\nwork and how they should be used.")]),e._v(" "),o("p",[o("img",{attrs:{src:"powerAPI_archi.png",alt:"Architecture of PowerAPI"}})]),e._v(" "),o("h2",{attrs:{id:"sensor"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sensor","aria-hidden":"true"}},[e._v("#")]),e._v(" Sensor")]),e._v(" "),o("p",[e._v("A sensor is an independent software that collects raw data correlated with the\npower consumption of monitored software.")]),e._v(" "),o("p",[e._v("Data are collected by querying the hardware's machine that hosts the monitored\nsoftware. The sensor must be executed on the same machine as the monitored\nsoftware. The data are collected throughout the duration of the software. For this reason,\nthe sensor must operate in parallel.")]),e._v(" "),o("p",[e._v("Collected data are stored in an external database to make the data available to\nthe formula. This database may be hosted on an other machine.")]),e._v(" "),o("h3",{attrs:{id:"usage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),o("p",[e._v("Because they collect from different hardware, each sensor are very different\nfrom one another. Refer to each sensor documentation to know how to use them.")]),e._v(" "),o("h2",{attrs:{id:"formula"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#formula","aria-hidden":"true"}},[e._v("#")]),e._v(" Formula")]),e._v(" "),o("p",[e._v("A formula is an independent software that use model to compute the power consumption of\nmonitored software from the data collected by the sensor.")]),e._v(" "),o("p",[e._v("We implement each formula with a common Command Line Interface (CLI) to connect\nit to a sensor and to configure its output. In this section, we present how the\nconnection between the sensor and the formula works. We also present the common\nformula's CLI.")]),e._v(" "),o("h3",{attrs:{id:"sensor-connection"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sensor-connection","aria-hidden":"true"}},[e._v("#")]),e._v(" Sensor Connection")]),e._v(" "),o("p",[e._v("A formula is connected to a sensor via a database (e.g MongoDB). The sensor writes\nthe collected data to the database and the formula reads this data from the\ndatabase.")]),e._v(" "),o("p",[e._v("There are two connection modes:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v('"Stream" mode where data is read from the database while the sensor is collecting it')])]),e._v(" "),o("li",[o("p",[e._v('"Post-mortem" mode which analyses the data already collected by the sensor in a\npast monitoring phase.')])])]),e._v(" "),o("p",[e._v('The default mode of a formula is the "Post-mortem" mode, use the command line\nargument '),o("code",[e._v("-s")]),e._v(' to enable the "Stream" mode.')]),e._v(" "),o("h3",{attrs:{id:"command-line-interface"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#command-line-interface","aria-hidden":"true"}},[e._v("#")]),e._v(" Command line interface")]),e._v(" "),o("p",[e._v("The presented CLI is common to all formulas of the PowerAPI toolkit.\nReplace "),o("code",[e._v("FORMULA_NAME")]),e._v(" with the name of the used formula in the\nfollowing commands.")]),e._v(" "),o("h4",{attrs:{id:"install-and-launch-the-formula"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#install-and-launch-the-formula","aria-hidden":"true"}},[e._v("#")]),e._v(" Install and Launch the formula")]),e._v(" "),o("p",[e._v("All formulas are available on pypi and docker-hub.")]),e._v(" "),o("p",[e._v("You can directly launch a docker container containing the formula with the following\ncommand:")]),e._v(" "),o("pre",[o("code",[e._v("docker run powerapi/FORMULA_NAME args ...\n")])]),e._v(" "),o("p",[e._v("To use the formula without docker, you can install it with "),o("code",[e._v("pip")]),e._v(":")]),e._v(" "),o("pre",[o("code",[e._v("pip3 install FORMULA_NAME\n")])]),e._v(" "),o("p",[e._v("Then run it with python(>=3.7):")]),e._v(" "),o("pre",[o("code",[e._v("python3 -m FORMULA_NAME args ...\n")])]),e._v(" "),o("h4",{attrs:{id:"command-line-arguments"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#command-line-arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Command line arguments")]),e._v(" "),o("p",[e._v("You can launch every formula with this common arguments, extra arguments could be\nadded at the end of the command line (it depends on the formula used):")]),e._v(" "),o("pre",[o("code",[e._v("(python3 -m/docker run) FORMULA_NAME input_mongo_uri input_db input_collection output_mongo_uri output_db output_collection\n")])]),e._v(" "),o("p",[e._v("with:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("input_mongo_uri")]),e._v(" : uri to the mongoDB used by the hwpc-sensor to store its\noutput data. Use the following format "),o("code",[e._v("mongodb://MONGO_ADDRESS:MONGO_PORT")])]),e._v(" "),o("li",[o("code",[e._v("input_db")]),e._v(" : database used by the hwpc-sensor to store its output data")]),e._v(" "),o("li",[o("code",[e._v("input_collection")]),e._v(" : collection used by the hwpc-sensor to store its output data")]),e._v(" "),o("li",[o("code",[e._v("output_mongo_uri")]),e._v(" : uri to the mongoDB used to store the power consumption data. Use the following format "),o("code",[e._v("mongodb://MONGO_ADDRESS:MONGO_PORT")])]),e._v(" "),o("li",[o("code",[e._v("output_db")]),e._v(" : database used to store the power consumption data")]),e._v(" "),o("li",[o("code",[e._v("output_collection")]),e._v(" : collection used to store the power consumption data")])]),e._v(" "),o("h4",{attrs:{id:"optional-arguments"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#optional-arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Optional arguments")]),e._v(" "),o("p",[e._v("List of the optional arguments used to enable some special mode:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("-s")]),e._v(' : connect to the database with "stream mode"')]),e._v(" "),o("li",[o("code",[e._v("-v")]),e._v(" : verbose mode (for debug)")])]),e._v(" "),o("h4",{attrs:{id:"formula-specific-arguments"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#formula-specific-arguments","aria-hidden":"true"}},[e._v("#")]),e._v(" Formula specific arguments")]),e._v(" "),o("p",[e._v("Some formula may use specific arguments. These arguments are described on their\nformula documentation. Just place them after the common CLI arguments")])])},[],!1,null,null,null);t.default=r.exports}}]);